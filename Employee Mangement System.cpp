#include<iostream>
#include<conio.h>
#include<stdio.h>
#include<stdlib.h>
#include<cstdlib>
#include<fstream>
using namespace std;

//creating class to keep functions and varialiables relating to project grouped together
class emp
{
	//creating private access specefier because the variables are only used within this class emp
private:
	int emp_id, sal;
	char name[20], company_name[20], project_site[20];

	// creating public access specefier for functions as the functions are being used in main function
public:

	// declaring function for creating menu within class
	void menu();

	//declaring function for getting employee data from user
	void insert();

	//creating function to display the data of employees
	void display();

	//creating function to search the data of employees
	void search();

	//creating function to modify the data of employees	
	void modify();

	//creating function to delete the data of employees	
	void del();
};


//defining menu function outide class using class, function name and scope resolution 
void emp::menu()
{
	//using label name "p" so that goto function can access function from start	
p:
	//using predefined function to clear screen
	system("cls");
	int x;     // declaring variale to get choice from user
	//forming main menu
	cout << "\n\n\n\n\n\n\n\t\t\t\t\t\t\t >>>>>>>>>>  EMPLOYEE MANAGEMENT SYSTEM  <<<<<<<<<< \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  1:  To Insert New Employee details \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  2:  To View List Of Employee \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  3:  To Search Certain Employee Details \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  4:  To Modify Existing Employee Details \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  5:  To Remove An Employee \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\t\t\t\t\t\t\t ENTER  6:  To Exit \n";
	cout << "\t\t\t\t\t\t\t -------------------------------------------------- \n";
	cout << "\n\t\t\t\t\t\t\t\t Enter your choice: ";
	cin >> x;
	//using switch statement to check what choice user has made
	switch (x)
	{
	case 1:
		insert();  //calling insert function from class emp
		break;
	case 2:
		display(); //calling display function in menu function from class emp
		break;
	case 3:
		search();	//calling search function in menu function from class emp
		break;
	case 4:
		modify(); //calling modify function in menu function from class emp
		break;
	case 5:
		del();
		break;
	case 6:
		// according to options we have to exit program if user chooses case 6
		//using predefined exit function
		exit(0);
		//if user enters any other number than (1-6) default case will run
		//give user an error message
	default:
		cout << "\n\n\t\t\t\t\t\t\t\t Invalid Value...please try again: ";
	}
	//using getch() function to tell console to pause until key is hit
	getch();
	//using goto fnction along with the label name to make shift flow of data to starting
	goto p;
}

// ctreating function for inserting data of employees
void emp::insert()
{
	system("cls");
	//we create the object for the file to store and read data. for it we use fstream
	fstream file;
	cout << "\n\n\t\t\t\t\t\t >>>>> INSERT DETAILS <<<<< \n";
	cout << "\t\t\t\t\t\t -------------------------- \n";
	cout << "\n\n EMPLOYEE ID: ";
	//cin >> emp_id;
	while (!(cin >> emp_id)) {
		cin.clear();
		cin.ignore(1000, '\n');
		cout << "\n\t\t Wrong data input, try again!";
		getch();
		menu();
	}
		
	cout << "\n\n\t\t EMPLOYEE NAME: ";
	cin >> name;
	cout << "\n\n EMPLOYEE SALARY: ";
	//cin >> sal;
	while (!(cin >> sal)) {
		cin.clear();
		cin.ignore(1000, '\n');
		cout << "\n\t\t Wrong data input, try again!";
		getch();
		menu();
	}
	cout << "\n\n\t\t HIRING COMPANY: ";
	cin >> company_name;
	cout << "\n\n PROJECT SITE: ";
	cin >> project_site;
	//to access employ file
	//using basic mode to write data in a file ios::out
	//also writing mode to store all recorded data in file ios::app
	file.open("emp.txt", ios::out | ios::app);
	//now inserting data within the file in specefic order.
	//during storing and retriveing of data the order of variables must be the same or else error is generated by compiler
	file << " " << emp_id << " " << name << " " << sal << " " << company_name << " " << project_site << endl<<endl;
	//closing file.
	file.close();
	cout << "\n\n\n\t\t\t\t Your record has been added successfully...";
	cout << "\n\t\t\t\t ------------------------------------------ \n";
}

//defining the display function
void emp::display()
{
	system("cls");
	//creating variable named file to access the file data
	//using fstream because we have to write as well as read data from file
	fstream file;
	cout << "\n\n\t\t\t\t\t\t >>>>> EMPLOYEES LIST <<<<< \n";
	cout << "\t\t\t\t\t\t -------------------------- \n";
	//opening the file emp.txt for fetching data from it
	file.open("emp.txt", ios::in);
	//if no record has been made of employee than it will display error and go back to main menu
	if (!file)
	{
		cout << "\n\n\t\t\t FILE WAS NOT FOUND... \n\n\t\t\t ERROR!";
		getch();
		menu();
	}
	//fetching data from the file using extraction operator
	file >> emp_id >> name >> sal >> company_name >> project_site;
	//using while loop for fetching data of all the employees
	//using end of file function within while loop to display all the records
	//end of line operator returns 1 if the file has ended. But this 1 within the while loop is not needed, because it will make the while loop display unwanted data
	//end of line operator returns 0 if file has not ended. If while loop gets the value of zero it will not display the records
	//hence using not(!) operator to invert the return value of end of line function
	while (!file.eof())
	{
		cout << "\n\n Employee ID: " << emp_id;
		cout << "\n\n\t\t Employee Name: " << name;
		cout << "\n\n Employee Salary: " << sal;
		cout << "\n\n\t\t Hiring Company: " << company_name;
		cout << "\n\n Project Site: " << project_site;
		cout << "\n\n\t\t ------------------- \n";
		file >> emp_id >> name >> sal >> company_name >> project_site;

	}
	file.close();

}
// defining search function which is called in the menu function
void emp::search()
{
	// to clear the pre existing data in the screen
	system("cls");
	//variable file to excess to the file data
	// to read and write data in the file we use fstream
	fstream file;
	// variable decleration to search the id of employe
	int emp_idd, found = 0;
	cout << "\n\n\t\t\t\t\t\t >>>>> SEARCH RECORD <<<<<";
	cout << "\n\t\t\t\t\t\t -------------------------\n";
	//to open the file name emp.txt and mode to read the file name emp.txt
	file.open("emp.txt", ios::in);
	// if their is no data on the emp.txt file then condition in the if statement satisfied and execute the statements
	if (!file)
	{
		cout << "\n\n\t\t\t File Opening Error!!! ";
		getch();
		menu();
	}
	// if their is data in the emp.txt file then enter the id for serching specific employe
	cout << "\n\n\t  >> Enter Employee ID To Search: ";
	cout << "\n\t  ------------------------------- \n";
	
	while (!(cin >> emp_idd)) {
		cin.clear();
		cin.ignore(1000, '\n');
		cout << "\n\t\t Wrong data input, try again!";
		getch();
		menu();
	}
	//to display the data from the file
	file >> emp_id >> name >> sal >> company_name >> project_site;
	//while loop to search the numbers of data in the file
	//give 0 when the file not end and gives 1 if the file end
	while (!file.eof())
	{
		//if the enter id is matched with the id in the file the execute the statement in if condition 
		if (emp_idd == emp_id)
		{
			// clear screen
			//to show the data inside the enter id
			system("cls");
			cout << "\n\n\t\t\t\t\t\t >>>>> EMPLOYEE DETAILS <<<<< \n";
			cout << "\t\t\t\t\t\t ---------------------------- \n";
			cout << "\n\n Employee ID: " << emp_id;
			cout << "\n\n\t\t Employee Name: " << name;
			cout << "\n\n Employee Salary: " << sal;
			cout << "\n\n\t\t Hiring Company: " << company_name;
			cout << "\n\n Project Site: " << project_site;
			// increment in found variable
			found++;
		}
		//to display the data remaning data in the files
		file >> emp_id >> name >> sal >> company_name >> project_site;
	}
	// to close the file which we opened in line 168
	file.close();
	// if the found variable is not incremented
	if (found == 0)
	{
		cout << "\n\n\t\t\t Employ ID Was Not Found... ";
		cout << "\n\t\t\t -------------------------- \n";
	}
}

// defining modify function
void emp::modify()
{
	// to clear screen
	system("cls");
	// variable decleration for the modifing items we can modify the below declered variables of employe
	// the rest of data of employe can not be changed e.g employ_id or company name
	int sall, test_id, found = 0;
	char name1[20], project_site1[20], company_name1[20];
	//to read and write the file
	//if we modify the data in a file then we need to store the data in other file 
	//so i take other file as file2
	fstream file, file2;
	cout << "\n\n\t\t\t\t\t\t >>>>> Modify Record <<<<< \n";
	cout << "\t\t\t\t\t\t ------------------------- \n";
	//to open the file name emp.txt and mode to read the file name emp.txt
	file.open("emp.txt", ios::in);
	// if their is no data on the emp.txt file then condition in the if statement satisfied and execute the statements
	if (!file)
	{
		// error and will go back to menu
		cout << "\n\n\t\t\t File Openning Error...";
		getch();
		menu();
	}
	// if their is data in the emp.txt file then enter the id for modifying specific employe
	cout << "\n\n\t >> Enter Employee ID For Modification: ";
	cout << "\n\t -------------------------------------- \n";
	cin >> test_id;
	// open the file 2 and write data and store the data in the file
	file2.open("emp1.txt", ios::app | ios::out);
	//to display the file and after that we modify the data in the file and store them in file2
	file >> emp_id >> name >> sal >> company_name >> project_site;
	// for modification of different employes data
	// same work as discribe in above function
	while (!file.eof())
	{
		//if the enter id is matched with the id in the file then modification of the data in the file start
		if (test_id == emp_id)
		{
			system("cls");
			cout << "\n\n\t\t\t\t\t >>>>> Modify Record <<<<< \n";
			cout << "\t\t\t\t\t ------------------------- \n";
			cout << "\n\n Employee Name : ";
			// if we want to modify the name of the employ. mean if we want to allocate the id of one employe to others
			cin >> name1;
			cout << "\n\n\t\t Employee Salary : ";
			// modify the salary
			cin >> sall;
			cout << "\n\n Company Name : ";
			// to modify the allocated company of the worker
			cin >> company_name1;
			cout << "\n\n\t\t New project site : ";
			// project site can be changed so we have decleread new variable for that
			cin >> project_site1;
			// to transfer data to file 2.
			file2 << " " << emp_id << " " << name1 << " " << sall << " " << company_name1 << " " << project_site1 << "\n";
			found++;
		}
		else
		{
			//to pass those data of employes which are not to be modified
			// so we have to pass such data also to the new file means to file2
			file2 << " " << emp_id << " " << name << " " << sal << " " << company_name << " " << project_site << "\n";
		}
		// this file is used for the while loop
		//to display the file and after that we modify the data in the file and store them in file2
		file >> emp_id >> name >> sal >> company_name >> project_site;
	}
	// to close previous file 
	file.close();
	//to close modified file
	file2.close();
	// to remove the previous file which we have modified
	//remove is build in function
	remove("emp.txt");
	// to rename the old file
	rename("emp1.txt", "emp.txt");
	//to check that is their any modification occur are not
	if (found == 0)
	{

		cout << "\n\n\t\t\t Employee ID Does Not Exsist... ";
		cout << "\n\t\t\t ------------------------------ \n";
	}
	else
	{

		cout << "\n\n\t\t\t Record Modified Successfully...";
		cout << "\n\t\t\t ------------------------------- \n";
	}
}
//delete function definition
void emp::del()
{
	system("cls");
	//variable decleration 
	int test_id, found = 0;
	//to read and write the file
	//if we delete the data in a file then we need to store the remaning data in the file to other file 
	//so i take other file as file2
	fstream file, file2;
	cout << "\n\n\t\t\t\t\t\t >>>>> Delete Record <<<<< \n";
	cout << "\t\t\t\t\t\t ------------------------- \n";
	// to open the file and to read the data in the file
	file.open("emp.txt", ios::in);
	// if their is no data on the emp.txt file then condition in the if statement satisfied and execute the statements
	if (!file)
	{
		// error will show and it will go back to menu
		cout << "\n\n\t\t\t File Openning Error...";
		getch();
		menu();
	}
	// if their is data in the emp.txt file then enter the id for deleting specific employe data
	cout << "\n\n\t\t >> Enter Employee ID For Delete: ";
	cout << "\n\t\t -------------------------------- \n";
	cin >> test_id;
	// open the file 2 and write data and store the data in the file
	file2.open("emp1.txt", ios::app | ios::out);
	//to display the file and after that we delete the data in the file and store the remaning data in file2
	file >> emp_id >> name >> sal >> company_name >> project_site;
	// for deleting different employes datas 
	while (!file.eof())
	{
		// if the enter id match the id in the file then those data will not pass to the new file file2
		if (test_id == emp_id)
		{
			cout << "\n\n\t\t\t Record Deleted Successfully...";
			cout << "\n\t\t\t ------------------------------\n";
			found++;

		}
		// those data which are not to be deleted in the old file will move to the new file means to file2
		else
		{
			file2 << " " << emp_id << " " << name << " " << sal << " " << company_name << " " << project_site << "\n";
		}
		// open the old file for the loops
		file >> emp_id >> name >> sal >> company_name >> project_site;
	}
	// to close file and file2
	file.close();
	file2.close();
	// the data which will remain in the old file then they will removed with the file
	remove("emp.txt");
	// rename the old file 
	rename("emp1.txt", "emp.txt");
	if (found == 0)
		cout << "\n\n\t\t\t Employee ID Can't Found...\n";
}


int main()
{
	//creating an object 'e' for class emp
	emp e;
	// calling the function menu from class 'emp' using object 'e'
	e.menu();
}
